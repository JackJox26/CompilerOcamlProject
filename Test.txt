Grammaire

Ordre d’implémentation :

Partie 1
Partie 2
Partie 3
Partie 4
Partie 5
Partie 6
Partie 7
Partie 8



S’ := PROG $

PROG :=  LOBJETS  BLOC

LOBJETS := ε
	| OBJET LOBJETS

OBJET := CLASSE
	| OBJETISOLE

CORPSOBJET := is { LCHAMP LMETHODE }

CLASSE := class Ident (OPTLPARAM) OPTHERITAGE OPTBLOC CORPSOBJET

OPTHERITAGE := ε
| extends Ident (OPTLPARAM)

OBJETISOLE := object Ident OPTBLOC CORPSOBJET

PARAM := Ident TYPE

OPTTYPE := ε
	| TYPE

TYPE := : Ident

OPTLPARAM := ε
	| LPARAM

LPARAM := PARAM
	| PARAM ,  LPARAM

LCHAMP := ε
| CHAMP LCHAMP

CHAMP:= var OPTAUTO PARAM ;

OPTAUTO := ε
| auto

METHODE := def OPTOVERRIDE Ident (OPTLPARAM) METHODECORPS

METHODECORPS := TYPE := EXPR
	| OPTTYPE is BLOC

OPTOVERRIDE := ε
		| override

LMETHODE := ε
	| METHODE LMETHODE

OPTBLOC := ε
	| BLOC 

BLOC := { OPTLINSTRUC }
	| { LDECLVAR is LINSTRUC }

OPTLINSTRUC := ε
	| LINSTRUC

LINSTRUC := INSTRUC
	| INSTRUC LINSTRUC

LDECLVAR := DECLVAR
	| DECLVAR LDECLVAR

DECLVAR := LIdent TYPE ;

LIdent := Ident
	| Ident , LIdent


INSTRUC := EXPR ;
	| BLOC
	| RETURN ;
	| cible := EXPR ;
	| if EXPR then INSTRUC else INSTRUC


EXPR := Ident
	| Cste
	| (EXPR)
	| (Ident EXPR)
	| EXPR . Ident





Token :

ID CSTE
AFFECT
ET OU
PARENT_G PARENT_D POINTVIRGULE DEUXPOINTS POINT
IF THEN ELSE 
ACCOLADE_G ACCOLADE_D 
NEW
IS VAR
AUTO OBJECT DEF NEW








